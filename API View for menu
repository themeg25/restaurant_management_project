from django.db import models

class MenuCategory(models.Model):
    name = models.CharField(max_length=100, unique=True)

        def __str__(self):
                return self.name


                class MenuItem(models.Model):
                    name = models.CharField(max_length=255)
                        price = models.DecimalField(max_digits=8, decimal_places=2)
                            description = models.TextField(blank=True)
                                category = models.ForeignKey(MenuCategory, on_delete=models.CASCADE, related_name='menu_items')

                                    def __str__(self):
                                from rest_framework import serializers
                                from .models import MenuItem
                          ''related_name
                                class MenuItemSerializer(serializers.ModelSerializer):
                                    category = serializers.StringRelatedField()  # Returns the category name
                                    
                                        class Meta:
                                                model = MenuItem
                                                        fields = ['id', 'name', 'price', 
    'from rest_framework import generics, status
                                                        from rest_framework.response import Response
                                                        from rest_framework.exceptions import APIException
                                                        from .models import MenuItem
                                                        from .serializers import MenuItemSerializer
                                                        
                                                        class MenuItemListView(generics.ListAPIView):
                                                            """
                                                                API endpoint to retrieve all menu items.
                                                                    Each menu item includes name, price, description, and category.
                                                                        """
                                                                            queryset = MenuItem.objects.all()
                                                                                serializer_class = MenuItemSerializer
                                                                                
                                                                                    def list(self, request, *args, **kwargs):
                                                                                            try:
                                                                                                        return super().list(request, *args, **kwargs)
                                                                                                                except APIException as e:
                                                                                                                            return Response({"error": str(e)}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)
                                                                                                                                    except Exception as e:
                                                                                                                                                return Response({"error": "An unexpected error occurred."}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)description', 'category']            return self.name