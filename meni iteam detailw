from rest_framework import generics, status
from rest_framework.response import Response
from rest_framework.exceptions import NotFound
from .models import MenuItem
from .serializers import MenuItemDetailSerializer

class MenuItemDetailView(generics.RetrieveAPIView):
    """
        API endpoint to retrieve detailed information for a single menu item by ID.
            Example: GET /api/menu-items/1/
                """
                    queryset = MenuItem.objects.all()
                        serializer_class = MenuItemDetailSerializer
                            lookup_field = 'id'

                                def get_object(self):
                                        try:
                                                    return MenuItem.objects.get(id=self.kwargs['id'])
                                                            except MenuItem.DoesNotExist:
                                                                        raise NotFound(detail="Menu item not found.")

                                                                            def retrieve(self, request, *args, **kwargs):
                                                                                    try:
                                                                                                instance = self.get_object()
                                                                                                            serializer = self.get_serializer(instance, context={'request': request})
                                                                                                                        return Response(serializer.data, status=status.HTTP_200_OK)
                                                                                                                                except NotFound as e:
                                                                                                                                            return Response({"error": str(e)}, status=status.HTTP_404_NOT_FOUND)
                                                                                                                                                    except Exception as e:
                                                                                                                                                                return Response({"error": "An unexpected error occurred."}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)